@page "/productdetails/{ProductId:int}"
@inject IProductService _productService
@inject ICartService _cartService
@inject NavigationManager _navigationManager
@inject MudBlazor.ISnackbar snackBar
@using ECommerce_Client.ViewModels

@if (IsProcessing)
{
    <div class="text-center">
        <MudProgressCircular Color="Color.Primary" Size="Size.Large" Indeterminate="true" />
    </div>
}
else
{
    <div class="min-f-screen w-full p-2 pt-10 flex justify-center ">
        <div class="w-full md:w-1/2 lg:w-1/2 px-6 mb-12">
            <MudCard>
                <MudText Typo="Typo.h3" Style="text-align:left; font-bold; background-color:black">@Product.Name</MudText>
           
                    <a href="@Product.ImageUrl">
                        <img src="@Product.ImageUrl" class="w-full h-64 object-cover mb-6" />
                        </a>
               
                        <MudCardContent>
                            <MudText Typo="Typo.h5">@((MarkupString)Product.Description)</MudText>
                        </MudCardContent>
                        <MudCardActions>
                            <MudButtonGroup>
                                @foreach (var productPrice in Product.ECommerceProductPrices)
                                {
                                    if (productPrice.Id == DetailsVM.SelectedProductPriceId)
                                    {
                                        <MudButton Color="Color.Dark" Width="128px" Height="64px" Style="border: 3px solid #28A745; border-radius: 5px; box-shadow: 5px">
                                            <p> &nbsp @productPrice.Size &nbsp </p>
                                            <p> &nbsp @productPrice.Price.ToString("c") &nbsp </p>
                                        </MudButton>
                                    }
                                    else
                                    {
                                        <MudButton OnClick="(args)=>SelectedProductPrice(args,productPrice.Id)" Color="Color.Info" Width="128px" Height="64px" Style="margin:a; border:1px solid; border-radius:20px;box-shadow:5px">
                                            <p> &nbsp @productPrice.Size &nbsp</p>
                                            <p> &nbsp @productPrice.Price.ToString("c") &nbsp </p>
                                        </MudButton>
                                    }
                                }
                            </MudButtonGroup>
                            <MudSpacer></MudSpacer>
                            @if (DetailsVM.SelectedProductPriceId > 0)
                            {
                                <MudButton Class="w-1/2 mr-2" OnClick="AddToCart" ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Dark">Add to Cart</MudButton>
                            }
                            else
                            {
                                <button type="submit" value="Add to Cart" disabled class="btn btn-primary form-control">Add to Cart</button>
                            }
                        </MudCardActions>
                        <MudText Typo="Typo.h6" Style="text-align:right; background-color:black">Product Color: @Product.Color &nbsp Category: @Product.Category.Name</MudText>
</MudCard>
            </div>
        </div>
}


@code {
    [Parameter]
    public int ProductId { get; set; }

    public ProductDTO Product { get; set; } = new();
    public bool IsProcessing { get; set; } = false;
    public DetailsVM DetailsVM { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        IsProcessing = true;
        Product = await _productService.Get(ProductId);
        IsProcessing = false;
    }

    private async Task SelectedProductPrice(MouseEventArgs e, int productPriceId)
    {
        DetailsVM.ProductPrice = Product.ECommerceProductPrices.FirstOrDefault(u => u.Id == productPriceId);
        DetailsVM.SelectedProductPriceId = productPriceId;
    }

    private async Task AddToCart()
    {
        ShoppingCart shoppingCart = new()
        {
            Count = DetailsVM.Count,
            ProductId = ProductId,
            ProductPriceId = DetailsVM.SelectedProductPriceId
        };

        await _cartService.IncrementCart(shoppingCart);
        _navigationManager.NavigateTo("/products");
        snackBar.Add("Product added to cart Succesfully.", Severity.Success);
    }
}

