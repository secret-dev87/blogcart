@page "/ProductPrice/Edit/{id:int}"
<PageTitle>Product Price Card</PageTitle>

@inject IProductRespository  _productRespository
@inject IProductPriceRespository _productPriceRespository
@inject MudBlazor.ISnackbar snackBar


<h1 class="font-serif text-3xl font-bold bg-black py-6 ">Product price management</h1>
<div class="bg-black container mx-auto flex flex-wrap pb-20">
    @if (IsLoading)
    {
        <div class="text-center">
            <MudProgressCircular Color="Color.Primary" Size="Size.Large" Indeterminate="true" />
        </div>

    }
    else
    {
        <div class="bg-gray-400 border-8 border-black p-4 text-black w-full md:w-1/2 lg:w-1/3 px-6 mb-2">
            <img class="w-full" src="@Product.ImageUrl" alt="Sunset in the mountains">
            <div class="px-6 py-4">
                <div class="font-bold text-xl mb-2">@Product.Name</div>
                <p>
                  @((MarkupString)Product.Description)
                </p>
            </div>
            <div class="px-6 pt-4 pb-2">
                <span class="inline-block bg-gray-200 rounded-full px-3 py-1 text-sm font-semibold text-gray-700 mr-2 mb-2">Category : @Product.Category.Name</span>
                <span class="inline-block bg-gray-200 rounded-full px-3 py-1 text-sm font-semibold text-gray-700 mr-2 mb-2">Favorite : @Product.CustomerFavorites</span>
                <span class="inline-block bg-gray-200 rounded-full px-3 py-1 text-sm font-semibold text-gray-700 mr-2 mb-2">#winter</span>
            </div>
        </div>
        <MudCard class="bg-gray-400 border-8 border-black p-4 text-black w-full md:w-1/2 lg:w-1/3 px-6">
            <MudCardMedia Image="@Product.ImageUrl" Height="350" />
            @*<MudCardMedia Image="/img/lb_logo.png" Height="400" />*@
            <MudCardContent Class="mt-8">
                <MudText Typo="Typo.h5">@Product.Name</MudText>
                <MudText Typo="Typo.body2">@((MarkupString)Product.Description)</MudText>
            </MudCardContent>
            <span class="inline-block bg-gray-200 rounded-full px-3 py-1 text-sm font-semibold text-gray-700 mr-2 mb-2">Category : @Product.Category.Name</span>
            <span class="inline-block bg-gray-200 rounded-full px-3 py-1 text-sm font-semibold text-gray-700 mr-2 mb-2">Favorite : @Product.CustomerFavorites</span>
        </MudCard>
    }
  
</div>

@code {

    [Parameter]
    public int Id { get; set; }
    private ProductDTO Product { get; set; } = new();
    private IEnumerable<ProductPriceDTO> ECommerceProductPrices { get; set; } = new List<ProductPriceDTO>();
    private bool IsLoading { get; set; } = true;


    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            IsLoading = true;
            StateHasChanged();
            Product = await _productRespository.Get(Id);
            ECommerceProductPrices = await _productPriceRespository.GetAll(Id);
            IsLoading = false;
            StateHasChanged();
        }
    }

}

