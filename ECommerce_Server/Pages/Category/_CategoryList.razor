@page "/category"
<PageTitle>Welcome Admin</PageTitle>

@inject ICategoryRespository _categoryRespository
@inject IDialogService DialogService
@inject NavigationManager _navigationManager
@inject MudBlazor.ISnackbar snackBar


<body>
<div>
<h1 class="font-serif text-3xl font-bold bg-black py-6 "> Post Index</h1>
<div class="w-full bg-gray-200 gap-4 mt-2 p-4">
    <MudButton Href="category/create" Variant="Variant.Filled" Color="Color.Dark">Create New Category</MudButton>
    <MudButton Href="/" Variant="Variant.Filled" Color="Color.Dark">Home</MudButton>
    <br />
</div>
    <div class="w-full p-2 flex justify-center items-center bg-white text-black">

    @if (Category.Any())
    {
        <table class="table-auto">
            <thead class="bg-gray-200">
                <tr>
                    <th class=" w-full px-4 py-4">Name</th>
                    <th class=" w-1/4 px-4 py-2">Action</th>
                    <th class=" w-1/4 px-4 py-2">Action</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var objCat in Category)
                {
                    <tr>
                        <td class="border px-4 py-2">@objCat.Name</td>
                        <td>
                            <MudButton Href="@($"category/edit/{objCat.Id}")" Variant="Variant.Outlined" Color="Color.Dark">Edit</MudButton>
                        </td>
                        <td>
                            <MudMenu Icon="@Icons.Material.Filled.Delete" Color="Color.Dark" Variant="Variant.Outlined">
                                <MudButton OnClick="@(()=>DeleteCategory(objCat.Id))" Icon="@Icons.Material.Filled.Delete" Variant="Variant.Filled"  Color="Color.Error">Confirm Delete/<br />Click Away to Cancel</MudButton>
                            </MudMenu>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }
    else
    {
        if (IsLoading)
        {
            <div class="text-center">
                <MudProgressCircular Color="Color.Primary" Size="Size.Large" Indeterminate="true" />
            </div>
        }
        else
        {
            <p>No Data to Display</p>
        }
    }
        </div>
    </div>
<footer>
    <div class="text-center text-white px-6 py-6 mb-2">
        &copy;2022 LightningBits. All rights reserved.
    </div>
</footer>
</body>




@code {@*[Parameter]
    public int Id { get; set; }*@

    public bool IsLoading { get; set; } = true;


    private IEnumerable<CategoryDTO> Category { get; set; } = new List<CategoryDTO>();

   
    protected override async Task OnInitializedAsync()
    {
        await Task.Run(LoadCategories);
    }

    private void LoadCategories()
    {
        Category = _categoryRespository.GetAll();
        IsLoading = false;
    }

    public void DeleteCategory(int id)
    {
        _categoryRespository.Delete(id);
        snackBar.Add("Category Deleted.", Severity.Success);
        LoadCategories();
    }

    public void DeleteCategoryDialog()
    {
        var parameters = new DialogParameters();
        parameters.Add("ContentText", "Do you really want to delete this category? This process cannot be undone.");
        parameters.Add("ButtonText", "Delete");
        parameters.Add("Color", Color.Error);

        DialogService.Show<DeleteConfirmation>("Confirm Delete", parameters);
    }
}